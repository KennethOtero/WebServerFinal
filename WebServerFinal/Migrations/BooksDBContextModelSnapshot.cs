// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebServerFinal.Models.DataLayer;

#nullable disable

namespace WebServerFinal.Migrations
{
    [DbContext(typeof(BooksDBContext))]
    partial class BooksDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebServerFinal.Models.Books", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookID"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.Property<bool>("IsRented")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("BookID");

                    b.HasIndex("GenreID");

                    b.HasIndex("UserID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookID = 1,
                            Author = "James S. A. Corey",
                            GenreID = 1,
                            IsRented = true,
                            Title = "Leviathan Wakes",
                            UserID = 1
                        },
                        new
                        {
                            BookID = 2,
                            Author = "James S. A. Corey",
                            GenreID = 1,
                            IsRented = false,
                            Title = "Leviathan Falls"
                        },
                        new
                        {
                            BookID = 3,
                            Author = "James S. A. Corey",
                            GenreID = 1,
                            IsRented = false,
                            Title = "Caliban's War"
                        });
                });

            modelBuilder.Entity("WebServerFinal.Models.Genres", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreID"));

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreID = 1,
                            Genre = "Science Fiction"
                        },
                        new
                        {
                            GenreID = 2,
                            Genre = "Mystery"
                        },
                        new
                        {
                            GenreID = 3,
                            Genre = "Fantasy"
                        });
                });

            modelBuilder.Entity("WebServerFinal.Models.Users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "test@gmail.com",
                            Name = "Kenneth Otero",
                            Password = "password"
                        },
                        new
                        {
                            UserID = 2,
                            Email = "jones@gmail.com",
                            Name = "Jones Brook",
                            Password = "password"
                        },
                        new
                        {
                            UserID = 3,
                            Email = "nolan@gmail.com",
                            Name = "Nolan Brake",
                            Password = "password"
                        });
                });

            modelBuilder.Entity("WebServerFinal.Models.Books", b =>
                {
                    b.HasOne("WebServerFinal.Models.Genres", "Genres")
                        .WithMany("Books")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebServerFinal.Models.Users", "Users")
                        .WithMany("Books")
                        .HasForeignKey("UserID");

                    b.Navigation("Genres");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebServerFinal.Models.Genres", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("WebServerFinal.Models.Users", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
